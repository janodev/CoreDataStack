{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"CoreDataStack"}]},{"anchor":"Writing-a-managed-model","level":3,"type":"heading","text":"Writing a managed model"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given a codable model"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Person"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Write a matching managed object model."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"PersonMO"}]},{"anchor":"Initializing-the-container","level":3,"type":"heading","text":"Initializing the container"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given a "},{"type":"codeVoice","code":"Model.xcdatamodeld"}]},{"type":"codeListing","syntax":"swift","code":["let container = PersistentContainer(name: \"Model\", inMemory: true, bundle: Bundle.module)","container.loadPersistentStores { desc, error in","    \/\/ error handling","}"]},{"anchor":"Mapping","level":3,"type":"heading","text":"Mapping"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a convenience constructor to build the managed object with a model. This is simplified a little"},{"type":"text","text":" "},{"type":"text","text":"with a NSManagedObject extension. This little saving will become a lot once you write many objects."}]},{"type":"codeListing","syntax":"swift","code":["import Foundation","import CoreData","","extension PersonMO","{","    convenience init(model: Person, context: NSManagedObjectContext) {","        self.init(using: context)","        id = model.id","        name = model.name","","        \/\/ dog relation","        if let modelDogs: [Dog] = model.dogs {","            let dogs: [DogMO] = modelDogs.map { DogMO(model: $0, context: context) }","            dogs.forEach { $0.owner = self }","            self.dogs = NSSet(array: dogs)","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mapping a model to a managed object is trivial:"}]},{"type":"codeListing","syntax":"swift","code":["extension Person: Persistable {","    public func mapPersistable(context: NSManagedObjectContext) -> PersonMO {","        PersonMO(model: self, context: context)","    }","}"]},{"anchor":"Writing","level":3,"type":"heading","text":"Writing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we can create objects using code like this:"}]},{"type":"codeListing","syntax":"swift","code":["let person = try createPersonFromJSON()","let personMO = person.mapPersistable(context: context)","try container.newBackgroundContext().save()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or, given that our model implements Persistable:"}]},{"type":"codeListing","syntax":"swift","code":["let person = try createPersonFromJSON()","try await container.save([person])"]},{"anchor":"Reading","level":3,"type":"heading","text":"Reading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To read the entities just call "},{"type":"codeVoice","code":"read()"},{"type":"text","text":". The type will be inferred."}]},{"type":"codeListing","syntax":"swift","code":["let persons: [PersonMO] = try await container.read()"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/coredatastack"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/CoreDataStack\/documentation\/CoreDataStack","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A minimal stack for Core Data."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"CoreDataStack","title":"CoreDataStack","symbolKind":"module","role":"collection","modules":[{"name":"CoreDataStack"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Group","identifiers":["doc:\/\/CoreDataStack\/documentation\/CoreDataStack\/CoreDataTransformers","doc:\/\/CoreDataStack\/documentation\/CoreDataStack\/Persistable","doc:\/\/CoreDataStack\/documentation\/CoreDataStack\/PersistenceError","doc:\/\/CoreDataStack\/documentation\/CoreDataStack\/PersistentContainer"]}],"references":{"doc://CoreDataStack/documentation/CoreDataStack":{"role":"collection","title":"CoreDataStack","abstract":[{"type":"text","text":"A minimal stack for Core Data."}],"identifier":"doc:\/\/CoreDataStack\/documentation\/CoreDataStack","kind":"symbol","type":"topic","url":"\/documentation\/coredatastack"},"doc://CoreDataStack/documentation/CoreDataStack/PersistenceError":{"role":"symbol","title":"PersistenceError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceError"}],"abstract":[{"type":"text","text":"The only error thrown by this persistence stack."}],"identifier":"doc:\/\/CoreDataStack\/documentation\/CoreDataStack\/PersistenceError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistenceError"}],"url":"\/documentation\/coredatastack\/persistenceerror"},"CoreDataStack":{"alt":"Core Data stack","type":"image","identifier":"CoreDataStack","variants":[{"url":"\/images\/CoreDataStack@2x.png","traits":["2x","light"]},{"url":"\/images\/CoreDataStack~dark@2x.png","traits":["2x","dark"]}]},"doc://CoreDataStack/documentation/CoreDataStack/CoreDataTransformers":{"role":"symbol","title":"CoreDataTransformers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreDataTransformers"}],"abstract":[{"type":"text","text":"Contains a reversible transformer between NSNumber and NSString."}],"identifier":"doc:\/\/CoreDataStack\/documentation\/CoreDataStack\/CoreDataTransformers","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CoreDataTransformers"}],"url":"\/documentation\/coredatastack\/coredatatransformers"},"Person":{"alt":"Person@2x.png","type":"image","identifier":"Person","variants":[{"url":"\/images\/Person@2x.png","traits":["2x","light"]},{"url":"\/images\/Person~dark@2x.png","traits":["2x","dark"]}]},"doc://CoreDataStack/documentation/CoreDataStack/PersistentContainer":{"role":"symbol","title":"PersistentContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistentContainer"}],"abstract":[],"identifier":"doc:\/\/CoreDataStack\/documentation\/CoreDataStack\/PersistentContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistentContainer"}],"url":"\/documentation\/coredatastack\/persistentcontainer"},"PersonMO":{"alt":"PersonMO@2x.png","type":"image","identifier":"PersonMO","variants":[{"url":"\/images\/PersonMO@2x.png","traits":["2x","light"]},{"url":"\/images\/PersonMO~dark@2x.png","traits":["2x","dark"]}]},"doc://CoreDataStack/documentation/CoreDataStack/Persistable":{"role":"symbol","title":"Persistable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Persistable"}],"abstract":[{"type":"text","text":"Defines model objects that can be persisted."}],"identifier":"doc:\/\/CoreDataStack\/documentation\/CoreDataStack\/Persistable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Persistable"}],"url":"\/documentation\/coredatastack\/persistable"}}}